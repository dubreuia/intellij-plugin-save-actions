// Add idea plugin version
plugins {
    id 'java'
    id 'idea'
    id 'org.jetbrains.intellij' version '1.15.0'
}

// Add coverage plugin
apply plugin: "jacoco"
apply plugin: 'org.jetbrains.intellij'
apply plugin: 'java'

// Add plugin group and version
group "com.dubreuia"
version "2.7.0"

// Add build script repository to maven central
repositories {
    mavenCentral()
}

// Add dependencies to test, junit5 api (annotations) and engine (runtime)
dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0'),
            'org.junit.jupiter:junit-jupiter',
            'org.junit.jupiter:junit-jupiter-engine',
            'org.assertj:assertj-core:3.24.2'
    testRuntimeOnly("org.junit.platform:junit-platform-launcher") {
        because("Only needed to run tests in a version of IntelliJ IDEA that bundles older versions")
    }
}

// Add intellij task configuration for base intellij version (minimum compatibility)
// This needs to fit the tag <idea-version since-build="xxx"> in plugin.xml
// See https://www.jetbrains.com/intellij-repository/snapshots
// See https://www.jetbrains.com/intellij-repository/releases
intellij {
    version = "2023.2"
    //version = "LATEST-EAP-SNAPSHOT"
    type = "IC"
    plugins = ["java"]
    pluginName = "Save Actions"
    // Do not touch the plugin.xml file
    updateSinceUntilBuild = false
}


listProductsReleases {
    sinceBuild = "231.*"
}

// JAVA compatibility
compileJava {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileJava.options.encoding = 'UTF-8'
compileJava.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
compileTestJava.options.encoding = 'UTF-8'

// Activate junit since gradle 4.7
test {
    useJUnitPlatform()
}

// Add resources directory because intellij test framework checks there for test resources (instead of build/resources)
sourceSets {
    test.output.resourcesDir = "build/classes/java/resources"
}

// Add jacoco test report for codecov
jacocoTestReport {
    reports {
        xml.required = true
        html.required = false
    }
}

wrapper() {
    gradleVersion = '8.2.1'
    distributionUrl = distributionUrl.replace('bin', 'all')
}

